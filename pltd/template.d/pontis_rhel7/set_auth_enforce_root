#!/bin/bash
#
# NAME="set_auth_enforce_root"
# ARG_NUM="0"
# DESC="set pam authentication enforce root for redhat 7"
# 

source modules.d/file_module.sh

function set_auth_enforce_root {

	local job_name="$2"
	local job_id="$3"
  local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ;  else echo ${job_id} ; fi`
	local msg_test_success="system-auth enforce_for_root correctly set"
	local msg_test_failure="system-auth enforce_for_root is not correctly set"
  local msg_backup_success="system-auth backup success"
	local msg_backup_failure="system-auth backup failed"
	local msg_restore_success="restore system-auth success"
	local msg_restore_failure="restore system-auth failed"
	local msg_update_success="update system-auth add enforce_for_root success"
	local msg_update_failure="update system-auth add enforce_for_root failed"
	local file_name="/etc/pam.d/system-auth"
	local string="enforce_for_root"
	local pattern_exist=0

	if [[ `egrep -oc "password.*pwquality\.so.*${string}" ${file_name}` -eq 1 ]]; then

		local pattern_exist=1

	fi

	case $1 in
		test)
						
			if [[ ${pattern_exist} -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

			fi
		;;

		backup)

			cmd_line="sed -i 's/${string}\ //' ${file_name} &>/dev/null"

			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi
		;;

		update)
		
			sed -i "s/pwquality\.so/pwquality\.so\ ${string}/" "${file_name}" &>/dev/null
			
			if [[ $? -eq 0 ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_update_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_update_failure}"

		
			fi
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"


			fi		
		;;

	esac

}
