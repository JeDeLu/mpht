#!/bin/bash
#
# NAME="set_init_runlevel_3"
# ARG_NUM="0"
# DESC="set default init runlevel to 3 for redhat 7"
# 

source modules.d/file_module.sh

function set_init_runlevel_3 {

	local job_name="$2"
	local job_id="$3"
  local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ; else echo ${job_id} ; fi`
	local msg_test_success="default init level 3 correctly set"
	local msg_test_failure="default init level 3 not correctly set"
  local msg_backup_success="default init backup success"
	local msg_backup_failure="default init backup failed"
	local msg_restore_success="restore default init level 3 success"
	local msg_restore_failure="restore default init level 3 failed"
	local msg_update_success="update default init level 3 success"
	local msg_update_failure="update default init level 3 failed"
	local target_current=`systemctl get-default`
	local target_wanted="multi-user.target"
	
	case $1 in
		test)
		
			if [[ "${target_current}" == "${target_wanted}" ]]; then

				prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

			fi
		;;

		update)
			
			systemctl set-default "${target_wanted}" &>/dev/null

			if [[ `systemctl get-default` == "${target_wanted}" ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_update_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_update_failure}"
		
			fi
		;;

		backup)

			cmd_line="systemctl set-default ${target_current} &>/dev/null"

			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"

			fi		
		;;

	esac

}
