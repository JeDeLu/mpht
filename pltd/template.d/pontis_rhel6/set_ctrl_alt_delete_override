#!/bin/bash
#
# NAME="set_ctrl_alt_delete_override"
# ARG_NUM="0"
# DESC="disable the ctrl-alt-delete from keyboard for Redhat release 6"
# 

source modules.d/file_module.sh

function set_ctrl_alt_delete_override {

	local job_name="$2"
	local job_id="$3"
	local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ; else echo ${job_id} ; fi`
	local msg_test_success="set control alt delete override correctly set"
	local msg_test_failure="set control alt delete override correctly set"
  local msg_backup_success="set control alt delete override backup success"
	local msg_backup_failure="set control alt delete override backup failed"
	local msg_restore_success="set control alt delete override restore success"
	local msg_restore_failure="set control alt delete override restore failed"
	local msg_update_success="set control alt delete override update successfull"
	local msg_update_failure="set control alt delete override update failed"
	local file_name="/etc/init/control-alt-delete.override"
	local override_pattern="exec /usr/bin/logger -p authpriv.notice -t init \"Ctrl-Alt-Del was pressed and ignored\""
	local conf_pattern="exec /sbin/shutdown -r now"
	local override_pattern_exist=0
	 
	if [[ `file_exist "file" "${file_name}"` -eq 1 ]] && [[ `egrep -c "${override_pattern}" "${file_name}"` -eq 1  ]] && [[ `egrep -c "${conf_pattern}" "${file_name}"` -eq 0 ]]; then
	
		override_pattern_exist=1
		
	fi

	case $1 in
		test)
		
			if [[ ${override_pattern_exist} -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

			fi
		;;

		backup)

			cmd_line="rm -fr \"${file_name}\" &>/dev/null"

			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"
			
			fi		
		;;

		update)
			
			echo "${override_pattern}" > "${file_name}"

			if [[ $? -eq 0 ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_update_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_update_failure}"

			fi 
		;;

		esac
}