#!/bin/bash
#
# NAME="set_service6_disable"
# ARG_NUM="1"
# ARG#1="service name to update"
# DESC="set redhat 6 service to disable"
# 

source modules.d/service_module.sh

function set_service6_disable {

	local job_name="$2"
	local job_id="$3"
	local service_name="$4"
	local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ; else echo ${job_id} ; fi`
	local msg_test_success="disable service ${service_name} correctly set"
	local msg_test_failure="disable service ${service_name} not correctly set"
  local msg_backup_success="disable service ${service_name} backup success"
	local msg_backup_failure="disable service ${service_name} backup failed"
	local msg_restore_success="disable service ${service_name} restore success"
	local msg_restore_failure="disable service ${service_name} restore failed"
	local msg_update_success="disable service ${service_name} update successfull"
	local msg_update_failure="disable service ${service_name} update failed"
	local service6_on=0	
	 
	if [[ `service6_exist "${service_name}"` -eq 1 ]]; then
	
		if [[ `service6_on_get "${service_name}"` -eq 1  ]]; then
		
			service6_on=1

		fi

	fi

	case $1 in
		test)
		
			if [[ ${service6_on} -eq 0 ]]; then

				prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

			fi
		;;

		backup)

			cmd_line="chkconfig ${service_name} on &>/dev/null"
			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"
			
			fi		
		;;

		update)
			
			if [[ `service6_off_set "${service_name}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_update_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_update_failure}"

			fi 
		;;

		esac
}
