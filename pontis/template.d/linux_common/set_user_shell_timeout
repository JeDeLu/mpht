#!/bin/bash
#
# NAME="set_user_shell_timeout"
# ARG_NUM="1"
# ARG#1="timeout value in second"
# DESC="configure the shell timeout in seconds for users"
# 

function set_user_shell_timeout {

	local job_name="$2"
	local job_id="$3"
	local timeout_value="$4"
	local file_name="/etc/bashrc"
	local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ; else echo ${job_id} ; fi`
	local msg_test_success="shell timeout correctly set"
	local msg_test_failure="shell timeout not correctly set"
  local msg_backup_success="shell timeout backup success"
	local msg_backup_failure="shell timeout backup failed"
	local msg_restore_success="restore shell timeout success"
	local msg_restore_failure="restore shell timeout failed"
	local msg_update_success="update shell timeout successfull"
	local msg_update_failure="update shell timeout failed"
	local pattern_exist=0
	local pattern
	
	# search for the exact match - timeout value set to 900
	if [[ `sed -n "/TMOUT=${timeout_value}/p" ${file_name} | wc -l` -gt  0 ]]; then

		pattern_exist=1

	else

		# search for the TMOUT pattern, we assume that the first search did not return correct pattern
		pattern=`egrep -o "TMOUT=[0-9]*" ${file_name}`

	fi

	case $1 in
		test)
		
			if [[ ${pattern_exist} -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

			fi
		;;

		backup)

			if [[ ${pattern} != "" ]]; then

				cmd_line="sed -i 's/TMOUT=${timeout_value}/${pattern}/' ${file_name} &>/dev/null"

			else

				cmd_line="sed -i '/export\ TMOUT=${timeout_value}/d' ${file_name} &>/dev/null"
				
			fi

			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"
			
			fi		
		;;

		update)
				
			if [[ "${pattern}" != "" ]]; then

				sed -i "s/${pattern}/TMOUT=${timeout_value}/" "${file_name}" &>/dev/null

			else

				echo "export TMOUT=${timeout_value}" 2>/dev/null >> "${file_name}"

			fi

			if [[ $? -eq 0 ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_update_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_update_failure}"

			fi 
		;;

		esac
}