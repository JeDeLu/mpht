#!/bin/bash
#
# NAME="lock_user_password"
# ARG_NUM="1"
# ARG#1="user name for who the password must be locked"
# DESC="lock user password"
# 

source modules.d/user_module.sh

function lock_user_password {
		
	local job_name="$2"
	local job_id="${3}"
	local user_name="${4}"
	local job_id_print=`if [[ ${job_id} -lt 10 ]]; then echo "0${job_id}" ; else echo ${job_id} ; fi`
	local msg_test_success="user ${user_name} password lock is correctly set"
	local msg_test_failure="user ${user_name} password lock is not correctly set"
  local msg_backup_success="backup user ${user_name} lock password success"
	local msg_backup_failure="backup ${user_name} lock password failed"
	local msg_restore_success="restore ${user_name} lock password success"
	local msg_restore_failure="restore ${user_name} lock password failed"
	local msg_update_success="update ${user_name} lock password success"
	local msg_update_failure="update ${user_name} lock password failed"

	case $1 in
		test)

			if [[ `user_exist "${user_name}"` -eq 1 ]]; then

				if [[ `user_password_lock_get "${user_name}"` -eq 1 ]]; then

					prt_func_res ${job_id_print} ${job_name} "TEST" "OK" "${msg_test_success}"

				else
				
					prt_func_res ${job_id_print} ${job_name} "TEST" "NOK" "${msg_test_failure}"

				fi
				
			else
			
				prt_func_res ${job_id_print} ${job_name} "TEST" "WARNING" "user ${user_name} not found"
			
			fi
		;;

		backup)

			cmd_line="passwd -u "${user_name}" &>/dev/null"
			if [[ `metadata_write_restore_cmd "${job_id}" "${cmd_line}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "BACKUP" "OK" "${msg_backup_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "BACKUP" "NOK" "${msg_backup_failure}"

			fi			
		;;

		restore)

			if [[ `metadata_is_restore_cmd "${job_id}"` -eq 1 ]]; then
			
				local restore_cmd=`metadata_get_restore_cmd "${job_id}"`
				eval ${restore_cmd}

				prt_func_res ${job_id_print} ${job_name} "RESTORE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "RESTORE" "NOK" "${msg_restore_failure}"

			fi
		;;

		update)
			
			if [[ `user_password_lock_set "${user_name}"` -eq 1 ]]; then

				prt_func_res ${job_id_print} ${job_name} "UPDATE" "OK" "${msg_restore_success}"

			else
				
				prt_func_res ${job_id_print} ${job_name} "UPDATE" "NOK" "${msg_restore_failure}"

			fi
		;;

	esac

}
